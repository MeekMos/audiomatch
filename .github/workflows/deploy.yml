name: Publish Python Package

on:
  push:
    tags:
      - '[0-2].[0-9]+.[0-9]+*'

jobs:

  pypi:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master

    - name: Extract tag name
      id: tag_name
      run: |
        echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: "3.8"

    - name: Publish Package to PyPI
      env:
        PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
        PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        poetry build
        poetry publish -u $PYPI_USERNAME -p $PYPI_PASSWORD

    - name: Wait for PyPI to update indexes
      env:
        TAG: ${{ steps.tag_name.outputs.TAG }}
      run: |
        while ! pip install "audiomatch==${TAG}"; do
          sleep 2s
        done;

  dockerhub:
    needs: pypi

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@master

    - name: Extract tag name
      id: tag_name
      run: |
        echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}

    - name: Build Docker image
      env:
        TAG: ${{ steps.tag_name.outputs.TAG }}
      run: |
        docker build . -t fdooch/audiomatch:"${TAG}" -t fdooch/audiomatch:latest --build-arg package_version="${TAG}"

    - name: Log in to the Dockerhub registry
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
        DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      run: |
        echo "${DOCKERHUB_TOKEN}" | docker login -u "${DOCKERHUB_USERNAME}" --password-stdin

    - name: Push to Dockerhub
      env:
        TAG: ${{ steps.tag_name.outputs.TAG }}
      run: |
        docker push fdooch/audiomatch:"${TAG}"
